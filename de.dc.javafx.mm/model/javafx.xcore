@Ecore(nsURI="http://www.frateranatis.org/javafx")
@GenModel(multipleEditorPages="false", creationIcons="false", editDirectory="/de.dc.javafx.mm.edit/src-gen",
	editorDirectory="/de.dc.javafx.mm.editor/src-gen", richClientPlatform="true", codeFormatting="true",
	importerID="org.eclipse.emf.importer.ecore", runtimePlatform="RCP", fileExtensions="javafx", tableProviders="true",
	dataTypeConverters="true")
package de.dc.javafx.mm

import javafx.geometry.Pos

class EmfModel{
	String basePackage
	String controller
	String name
	String[0..*] styleClass
	contains EBindingModel[0..1] bindingModel
	contains ENode[0..1] root
	contains EBean[0..*] beans
}

class EBean{
	String name
	String instanceName
	boolean generateClass = 'true'
	contains EField[0..*] fields
}

class EField{
	String name
	String datatype = 'String'
}

class EBindingModel{
	contains EBinding[0..*] bindings
}

class EBinding{
	String name
	refers ENode node
	EBindingType bindingType = 'StringProperty'
	EControlBinding binding = 'TextProperty'
	EBindingDirection direction = 'Bind'
	
}

class Styleable{}

class Skinnable{}

class EInsets{
	double top ='0.0'
	double bottom ='0.0'
	double right ='0.0'
	double left ='0.0'
}

class EGroup extends ENode{}

abstract class EControl extends ENode{
}

abstract class ELabeled extends EControl{
	String text
}

class EText extends ELabeled{
	String promtText
}

class ELabel extends ELabeled{}

abstract class EButtonBase extends ELabeled{}

class EButton extends EButtonBase{}

class ECheckBox extends EButtonBase{
	boolean selected
}

class EHyperlink extends EButtonBase{
	boolean visited
}

class EMenuButton extends EButtonBase{}

class ESplitMenuButton extends EButtonBase{}

class EToogleButton extends EButtonBase{
	boolean selected
}

abstract class EBaseView extends EControl{
	refers EBean model
}

class EFilteredTableView extends ETableView{}

class ETableView extends EBaseView{
	contains ETableColumn[0..*] columns
}

class ETableColumn{
	String ^id
	String name
	double width = '150'
	String cellValueFactory
	String cellFactory
	refers EField associatedField
}

class EListView extends EBaseView{
}

class ERadioButton extends EToogleButton{}

abstract class EAxis extends ENode{}

class ECatgeoryAxis extends EAxis{}

class EValueAxis extends EAxis{}

class EPieChart extends EChart{}

class EXYChart extends EChart{}

class EPane extends ENode{
	EPos pos
}

class EStackPane extends EPane{}

class EDialogPane extends EPane{
	String header
	String headerText
	String contentText
	contains ENode content
}

class EGridPane extends EPane{}

class EHBox extends EPane{
	double spacing ='0'
}

class EVBox extends EPane{
	double spacing ='0'
}

class EFlowPane extends EPane{}

class ESplitPane extends EPane{}

class ETilePane extends EPane{}

class EAnchorPane extends EPane{}

class EBorderPane extends EPane{
	contains ENode left
	contains ENode right
	contains ENode top
	contains ENode bottom
	contains ENode center
}

abstract class EChart extends ENode{
	boolean animated = 'true'
	boolean legendVisible = 'true'
	String title
}

class EImageView extends ENode{
	String imagePath
}

class EScrollPane extends EPane{
       boolean isPannable = 'true'
	boolean fitToWidth = 'false'
	boolean fitToHeight = 'false'
	contains ENode content
}

class EEvents{
 @GenModel(propertyCategory="Events")
	String onAction
}

class EWebView extends ENode{
	String url
	boolean contextMenuEnabled = 'false'
}

abstract class ENode extends Styleable, Skinnable, EEvents{

 @GenModel(propertyCategory="Base")
	String ^id
 @GenModel(propertyCategory="Base")
	double opacity
 @GenModel(propertyCategory="Base")
	boolean visible
 @GenModel(propertyCategory="Base")
	boolean disable
 @GenModel(propertyCategory="Base")
	String style
 @GenModel(propertyCategory="Base")
	String[0..*] styleClass

 @GenModel(propertyCategory="Layout")
	contains EInsets margin
 @GenModel(propertyCategory="Layout")
	double layoutX
 @GenModel(propertyCategory="Layout")
	double layoutY
 @GenModel(propertyCategory="Layout")
	double maxHeight
 @GenModel(propertyCategory="Layout")
	double minHeight
 @GenModel(propertyCategory="Layout")
	double prefHeight
 @GenModel(propertyCategory="Layout")
	double maxWidth
 @GenModel(propertyCategory="Layout")
	double minWidth
 @GenModel(propertyCategory="Layout")
	double prefWidth
 @GenModel(propertyCategory="Layout")
	contains EInsets padding
	contains ENode[0..*] children
}

class ETabPane extends EPane{
	contains ETab[0..*] tabs
}

class ETab{
	String ^id
	String name
	contains ENode[0..1] content
}

class EAreaChart extends EXYChart{}
class EBarChart extends EXYChart{}
class EBubbleChart extends EXYChart{}
class ELineChart extends EXYChart{}
class EScatterChart extends EXYChart{}
class EStackedAreaChart extends EXYChart{}
class EStackedBarChart extends EXYChart{}

type EPos wraps Pos create{ if(it!==null) Pos.valueOf(it)} convert{ if(it!==null) it.name}

enum EControlBinding{
	BackgroundProperty
	BorderProperty
	DisableProperty
	FocusedProperty
	FontProperty
	TextProperty
	LayoutXProperty
	LayoutYProperty
	MaxHeightProperty
	MaxWidthProperty
	MinHeightProperty
	MinWidthProperty
	PrefHeightProperty
	MinPrefWidthProperty
	ScaleXProperty
	ScaleYProperty
	ScaleZProperty
	TranslateXProperty
	TranslateYProperty
	TranslateZProperty
}

enum EBindingType{
	BooleanProperty
	FloatProperty
	DoubleProperty
	IntegerProperty
	LongProperty
	StringProperty
	ObjectProperty
	ListProperty
	SetProperty
	MapProperty	
}

enum EBindingDirection{
	Bind
	BindBidirectional
	Unbind
	UnbindBidirectional
}